<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code
{
    [Inject] private IEthereumHostProvider EthHostProvider { get; set; } = null!;
    [Inject] private UserState UserState { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        EthHostProvider.NetworkChanged += NetworkChanged;
        EthHostProvider.SelectedAccountChanged += SelectedAccountChanged;

        await base.OnInitializedAsync();
    }

    private async Task SelectedAccountChanged(string account)
    {
        var web3 = await EthHostProvider.GetWeb3Async();

        UserState.User.Id = account.ToLower();
        UserState.ChainId = (ulong)(await web3.Eth.ChainId.SendRequestAsync()).Value;
    }

    private async Task NetworkChanged(long chainId)
    {
        UserState.ChainId = (ulong)chainId;
    }
}
